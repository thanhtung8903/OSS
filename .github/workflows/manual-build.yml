name: Manual APK Build

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'release'
        type: choice
        options:
        - debug
        - release
        - both
      version_name:
        description: 'Version name (optional)'
        required: false
        default: ''

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Clean project
      run: ./gradlew clean
      
    - name: Build Debug APK
      if: ${{ github.event.inputs.build_type == 'debug' || github.event.inputs.build_type == 'both' }}
      run: ./gradlew assembleDebug
      
    - name: Build Release APK
      if: ${{ github.event.inputs.build_type == 'release' || github.event.inputs.build_type == 'both' }}
      run: ./gradlew assembleRelease
      
    - name: Get current date
      id: date
      run: echo "date=$(date +'%Y%m%d-%H%M')" >> $GITHUB_OUTPUT
      
    - name: Upload Debug APK
      if: ${{ github.event.inputs.build_type == 'debug' || github.event.inputs.build_type == 'both' }}
      uses: actions/upload-artifact@v3
      with:
        name: debug-apk-${{ steps.date.outputs.date }}
        path: app/build/outputs/apk/debug/*.apk
        retention-days: 30
        
    - name: Upload Release APK
      if: ${{ github.event.inputs.build_type == 'release' || github.event.inputs.build_type == 'both' }}
      uses: actions/upload-artifact@v3
      with:
        name: release-apk-${{ steps.date.outputs.date }}
        path: app/build/outputs/apk/release/*.apk
        retention-days: 30
        
    - name: Create summary
      run: |
        echo "## ðŸŽ‰ Manual Build Completed!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Build Configuration:" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Type**: ${{ github.event.inputs.build_type }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Version Name**: ${{ github.event.inputs.version_name || 'Default' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Time**: ${{ steps.date.outputs.date }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ðŸ“± APK Files:" >> $GITHUB_STEP_SUMMARY
        echo "APK files are available in the **Artifacts** section below." >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ðŸ“‹ Next Steps:" >> $GITHUB_STEP_SUMMARY
        echo "1. Download the APK from Artifacts" >> $GITHUB_STEP_SUMMARY
        echo "2. Install on Android device for testing" >> $GITHUB_STEP_SUMMARY
        echo "3. Report any issues found" >> $GITHUB_STEP_SUMMARY 